# Generated by Django 2.0 on 2018-02-21 20:43

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mydidata.models
import shortuuidfield.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mydidata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Respostas',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('is_correct', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Alternativas',
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Turmas',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('students', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Disciplinas',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('index', models.PositiveSmallIntegerField()),
                ('question_text', ckeditor_uploader.fields.RichTextUploadingField()),
                ('is_discursive', models.BooleanField(default=False)),
                ('difficulty_level', models.PositiveSmallIntegerField(choices=[(1, 'Difícil'), (2, 'Médio'), (3, 'Fácil')])),
                ('question_type', models.PositiveSmallIntegerField(choices=[(1, 'Exercício'), (2, 'Trabalho'), (3, 'Prova')])),
            ],
            options={
                'verbose_name_plural': 'Questões',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('difficulty_level', models.PositiveSmallIntegerField(choices=[(1, 'Difícil'), (2, 'Médio'), (3, 'Fácil'), (4, 'Misto')])),
                ('questions', models.ManyToManyField(to='mydidata.Question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('topic_title', models.CharField(max_length=200)),
                ('topic_content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('order', models.IntegerField()),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Discipline')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tópicos',
            },
        ),
        migrations.AlterField(
            model_name='greeting',
            name='when',
            field=models.DateTimeField(auto_now_add=True, verbose_name='date created'),
        ),
        migrations.CreateModel(
            name='DiscursiveAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mydidata.Answer')),
                ('answer_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('assignment_file', models.FileField(blank=True, null=True, storage=mydidata.models.OverwriteStorage(), upload_to='uploads/assignments/%Y/%m/%d')),
                ('is_correct', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Respostas Discursivas',
            },
            bases=('mydidata.answer',),
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mydidata.Answer')),
            ],
            options={
                'verbose_name_plural': 'Respostas de Múltipla Escolha',
            },
            bases=('mydidata.answer',),
        ),
        migrations.AddField(
            model_name='test',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Topic'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='disciplines',
            field=models.ManyToManyField(null=True, to='mydidata.Discipline'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='students',
            field=models.ManyToManyField(null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mydidata.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Test'),
        ),
        migrations.AddField(
            model_name='multiplechoiceanswer',
            name='choice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mydidata.Choice'),
        ),
    ]
